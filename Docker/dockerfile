FROM nvidia/cuda:11.3.1-cudnn8-devel-ubuntu20.04
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update -y && \
     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
         apt-transport-https \
         ca-certificates \
         gnupg \
         wget && \
     rm -rf /var/lib/apt/lists/*
RUN  echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
     wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - && \
         apt-get update -y && \
     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
         nsight-compute-2021.1.1 && \
     rm -rf /var/lib/apt/lists/*

ENV PATH="/opt/nvidia/nsight-compute/2021.1.1:${PATH}"

RUN apt update \
    && apt install -y wget \
                    python3 \ 
                    libssl-dev \
                    libevent-core-2.1-7 \
                    libhwloc-dev \
                    libevent-pthreads-2.1-7
                                        
WORKDIR /tmp
RUN wget https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3.tar.gz
RUN tar -zxvf cmake-3.20.3.tar.gz
WORKDIR /tmp/cmake-3.20.3/
RUN ./bootstrap
RUN make -j64
RUN make install

# install openmpi with cuda support.
RUN wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.1.tar.gz
RUN tar -zxvf openmpi-4.1.1.tar.gz
WORKDIR openmpi-4.1.1/
RUN ./configure --with-cuda --enable-mpi-cxx --prefix=/opt/openmpi-4.1.1
RUN make -j64 install
ENV LD_LIBRARY_PATH=/usr/local/lib:/opt/openmpi-4.1.1/lib/:$LD_LIBRARY_PATH
ENV PATH=/opt/openmpi-4.1.1/bin/:$PATH
RUN ln -s /usr/bin/python3.8 /usr/bin/python

# RUN useradd -r yuke_wang
# RUN mkdir /MGG && chown yuke_wang /MGG
# USER yuke_wang
WORKDIR /MGG